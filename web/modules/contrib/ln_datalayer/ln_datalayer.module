<?php

/**
 * @file
 * Provides primary Drupal hook implementations.
 */

use Drupal\Core\Form\FormStateInterface;

/**
 * Implements hook_page_attachments().
 *
 * Calculate some tags on clien side.
 */
function ln_datalayer_page_attachments(array &$attachments) {
  $datalayer_manager = \Drupal::service('advanced_datalayer.manager');
  $datalayer_tags = $datalayer_manager->getGlobalDatalayerTags();

  // Check if we have any datalayer tags, possibly it is disabled.
  if (!empty($datalayer_tags) && advanced_datalayer_is_current_route_supported()) {
    $attachments['#attached']['library'][] = 'ln_datalayer/datalayer';
  }

  $info = \Drupal::service('extension.list.module')->getExtensionInfo('ln_datalayer');
  $attachments['#attached']['library'][] = 'ln_datalayer/events';
  $attachments['#attached']['drupalSettings']['ln_datalayer'] = [
    'data' => [
      'module_name' => $info['name'],
      'module_version' => $info['version'],
    ],
  ];
}


/**
 * Implements hook_form_alter().
 */
function ln_datalayer_form_alter(&$form, FormStateInterface &$form_state, $form_id) {
  $form['#submit'][] = '_ln_datalayer_form_submit';
}

function _ln_datalayer_form_submit(&$form, FormStateInterface &$form_state) {
  if($form['#form_id'] == 'views_exposed_form' && ($view = $form_state->get('view'))){
    //Views exposed form are submitted in every requests, check if is a human submit
    $filtered = FALSE;
    if (is_array($view->filter) && count($view->filter)) {
      foreach ($view->filter as $filter) {
        if ($filter->isExposed()) {
          $identifier = $filter->options['expose']['identifier'];
          if (isset($view->getExposedInput()[$identifier])) {
            $filtered = TRUE;
            break;
          }
        }
      }
    }
    if(!$filtered){
      return;
    }
  }
  \Drupal::service('ln_datalayer.events')->addEvent("form_generic_submit_{$form['#id']}", [
    'event' => 'form_submit',
    'event_name' => 'form_submit',
    'form_name' => $form['#id'],
    'form_id' => $form['#id'],
  ]);
}
/**
 * Implements hook_preprocess_node()
 */
function ln_datalayer_preprocess_node(&$variables){
  /** @var \Drupal\node\NodeInterface $node */
  $node = $variables['elements']['#node'];

  $variables['#attached']['drupalSettings']['ln_datalayer']['data'] = [
    'content_id' => $node->id(),
    'content_name' => $node->getTitle(),
    'content_type' => $node->getType(),
  ];
}

