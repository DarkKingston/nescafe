<?php

/**
 * @file
 * Contains ln_c_social_buttons.module.
 */

use Drupal\file\Entity\File;
use Drupal\media\Entity\Media;

/**
 * Implements hook_theme().
 */
function ln_c_social_buttons_theme($existing, $type, $theme, $path) {
  return [
    'paragraph__c_socialbuttons' => [
      'template' => 'paragraph--c-socialbuttons',
      'base hook' => 'paragraph',
    ],
    'paragraph__c_social_buttons_item' => [
      'template' => 'paragraph--c-social-buttons-item',
      'base hook' => 'paragraph',
    ],
  ];
}

function ln_c_social_buttons_preprocess_paragraph(&$variables) {
  if($variables['paragraph']->getType() == 'c_socialbuttons') {
    $variables['#attached']['library'][] = 'ln_c_social_buttons/social-buttons';
  }
  if($variables['paragraph']->getType() == 'c_social_buttons_item') {
    /** @var \Drupal\paragraphs\ParagraphInterface $paragraph */
    $paragraph = $variables['paragraph'];
    if (!$paragraph->get('field_social_link_platform')->isEmpty() &&
        ($social_platform = $paragraph->get('field_social_link_platform')->entity) &&
        !$social_platform->get('field_c_icon')->isEmpty() &&
        ($media = $social_platform->get('field_c_icon')->entity)){
      /** @var \Drupal\media\MediaInterface $media */
      $field_name = $media->hasField('image') ? 'image' : 'field_media_image';
      if(!$media->get($field_name)->isEmpty() && ($file = $media->get($field_name)->entity)){
        $variables['content']['image_uri'] = $file->createFileUrl();
      }
    }
  }
}

/**
 * Implements hook_ln_sample_content().
 */
function ln_c_social_buttons_ln_sample_content() {
    /** @var \Drupal\Core\Extension\ModuleHandlerInterface $module_handler */
    $module_handler = \Drupal::service('module_handler');
    /** @var \Drupal\Core\Extension\Extension $module_object */
    $module_object = $module_handler->getModule(basename(__FILE__, '.module'));
    $module_name = $module_object->getName();

    $source = drupal_get_path('module', $module_name) . '/content';
    /** @var \Drupal\Core\File\FileSystemInterface $file_system */
    $file_system = \Drupal::service('file_system');
    $files = $file_system->scanDirectory($source, '/demo.*\.(yml)$/');
    $yaml_file_path = NULL;
    foreach ($files as $file) {
        $yaml_file_path[] = '/content/' . $file->filename;
    }

    return $yaml_file_path;
}
