<?php

use Drupal\field\Entity\FieldConfig;
use Drupal\field\Entity\FieldStorageConfig;

/**
 * Implements hook_install().
 */
function ln_srh_extended_install($is_syncing) {
  // Add remote_video to media field reference if remote_video exists.
  $remoteVideoConfig = \Drupal::configFactory()
    ->get('media.type.remote_video')
    ->getRawData();
  if ($remoteVideoConfig) {
    $mediaField = FieldConfig::loadByName('taxonomy_term', 'srh_tool', 'field_srh_media_gallery');
    if ($mediaField) {
      $handlerSettings = $mediaField->getSetting('handler_settings');
      $handlerSettings['target_bundles']['remote_video'] = 'remote_video';
      $mediaField->setSetting('handler_settings', $handlerSettings);
      $mediaField->save();
    }
  }
}

/**
 * Create Field field_srh_cloudfront_media on steps and tools
 */
function ln_srh_extended_update_8001(&$sandbox) {
  $module_path = drupal_get_path('module','ln_srh_extended');
  $module_standard_path = drupal_get_path('module','ln_srh_standard');
  /** @var \Drupal\ln_srh\Services\ConfigReplace $configReplaceHelper */
  $configReplaceHelper = \Drupal::service('ln_srh.config_replacer');
  // Create Field field_srh_cloudfront_media on steps
  $configReplaceHelper->createFieldStorageConfigByYml($module_standard_path . '/config/install/field.storage.paragraph.field_srh_cloudfront_media.yml');
  $configReplaceHelper->createFieldConfigByYml($module_path . '/config/install/field.field.paragraph.srh_step.field_srh_cloudfront_media.yml');
  $configReplaceHelper->addFieldToEntityFormDisplayConfigByYml($module_path . '/config/rewrite/core.entity_form_display.paragraph.srh_step.default.yml','field_srh_cloudfront_media','field.field.paragraph.srh_step.field_srh_cloudfront_media');
  // Create Field field_srh_cloudfront_media on tools
  $configReplaceHelper->createFieldStorageConfigByYml($module_path . '/config/install/field.storage.taxonomy_term.field_srh_cloudfront_media.yml');
  $configReplaceHelper->createFieldConfigByYml($module_path . '/config/install/field.field.taxonomy_term.srh_tool.field_srh_cloudfront_media.yml');
  $configReplaceHelper->addFieldToEntityFormDisplayConfigByYml($module_path . '/config/install/core.entity_form_display.taxonomy_term.srh_tool.default.yml','field_srh_cloudfront_media','field.field.taxonomy_term.srh_tool.field_srh_cloudfront_media');
}

/**
 * Create taxonomy srh_nutrient_unit_type
 */
function ln_srh_extended_update_8002(&$sandbox) {
  $module_path = drupal_get_path('module', 'ln_srh_extended');

  /** @var \Drupal\ln_srh\Services\ConfigReplace $configReplaceHelper */
  $configReplaceHelper = \Drupal::service('ln_srh.config_replacer');

  // Create Vocabulary bundle srh_nutrient_unit_type
  $configReplaceHelper->createVocabularyConfigByYml($module_path . '/config/install/taxonomy.vocabulary.srh_nutrient_unit_type.yml');
  $configReplaceHelper->createFieldConfigByYml($module_path . '/config/install/field.field.taxonomy_term.srh_nutrient_unit_type.field_srh_abbreviation.yml');
  $configReplaceHelper->createFieldConfigByYml($module_path . '/config/install/field.field.taxonomy_term.srh_nutrient_unit_type.field_srh_plural_abbreviation.yml');
  $configReplaceHelper->createFieldConfigByYml($module_path . '/config/install/field.field.taxonomy_term.srh_nutrient_unit_type.field_srh_plural_name.yml');
  $configReplaceHelper->createFieldConfigByYml($module_path . '/config/install/field.field.taxonomy_term.srh_nutrient_unit_type.field_srh_id.yml');
  $configReplaceHelper->createEntityFormDisplayByYml($module_path . '/config/install/core.entity_form_display.taxonomy_term.srh_nutrient_unit_type.default.yml');
  $configReplaceHelper->createEntityViewDisplayByYml($module_path . '/config/install/core.entity_view_display.taxonomy_term.srh_nutrient_unit_type.default.yml');

  /** @var \Drupal\field\FieldConfigInterface $fieldConfig */
  if ($fieldConfig = FieldConfig::loadByName('taxonomy_term', 'srh_nutrient', 'field_srh_unit_type')) {
    $fieldConfig->delete();
  }
  $configReplaceHelper->createFieldStorageConfigByYml($module_path . '/config/install/field.storage.taxonomy_term.field_srh_unit_type.yml');
  $configReplaceHelper->createFieldConfigByYml($module_path . '/config/install/field.field.taxonomy_term.srh_nutrient.field_srh_unit_type.yml');
  $configReplaceHelper->addFieldToEntityFormDisplayConfigByYml($module_path . '/config/rewrite/core.entity_form_display.taxonomy_term.srh_nutrient.default.yml', 'field_srh_unit_type', 'field.field.taxonomy_term.srh_nutrient.field_srh_unit_type');
}

/**
 * Update field_srh_unit_type definition
 */
function ln_srh_extended_update_8003(&$sandbox) {
  $module_path = drupal_get_path('module', 'ln_srh_extended');

  /** @var \Drupal\ln_srh\Services\ConfigReplace $configReplaceHelper */
  $configReplaceHelper = \Drupal::service('ln_srh.config_replacer');

  /** @var \Drupal\field\FieldConfigInterface $fieldConfig */
  if ($fieldConfig = FieldConfig::loadByName('taxonomy_term', 'srh_nutrient', 'field_srh_unit_type')) {
    $fieldConfig->delete();
  }
  if ($fieldStorage = FieldStorageConfig::loadByName('taxonomy_term', 'field_srh_unit_type')) {
    $fieldStorage->delete();
  }
  $configReplaceHelper->createFieldStorageConfigByYml($module_path . '/config/install/field.storage.taxonomy_term.field_srh_unit_type.yml');
  $configReplaceHelper->createFieldConfigByYml($module_path . '/config/install/field.field.taxonomy_term.srh_nutrient.field_srh_unit_type.yml');
  $configReplaceHelper->addFieldToEntityFormDisplayConfigByYml($module_path . '/config/rewrite/core.entity_form_display.taxonomy_term.srh_nutrient.default.yml', 'field_srh_unit_type', 'field.field.taxonomy_term.srh_nutrient.field_srh_unit_type');
}
