<?php

use Drupal\Core\Entity\Entity\EntityFormDisplay;
use Drupal\ln_srh_menuiq\SRHMyMenuIQConstants;
use Drupal\ln_srh\Form\SRHFieldMapping;
use Drupal\ln_srh\SRHConstants;
use Drupal\ln_srh_menuiq\Form\MyMenuIQSettings;
use Symfony\Component\Yaml\Yaml;
use Drupal\Core\Entity\EntityStorageException;
use Drupal\Core\Entity\Entity\EntityViewDisplay;

function ln_srh_menuiq_install(){
  _ln_srh_menuiq_enable_sidedishes_field();
  _ln_srh_menuiq_enable_menuiqscore_field();
  _ln_srh_menuiq_enable_process_sidedish();
  _ln_srh_menuiq_enable_process_menuiqscore();
  _ln_srh_menuiq_enable_adimo_field();
}

function ln_srh_menuiq_uninstall(){
  _ln_srh_menuiq_disable_sidedishes_field();
  _ln_srh_menuiq_disable_menuiqscore_field();
  _ln_srh_menuiq_disable_process_sidedish();
  _ln_srh_menuiq_disable_process_menuiqscore();
  _ln_srh_menuiq_disable_adimo_field();
}

function _ln_srh_menuiq_enable_process_sidedish(){
  /** @var \Drupal\Core\Config\Config $config */
  $config = \Drupal::service('config.factory')->getEditable(SRHFieldMapping::SETTINGS);
  $config->set(SRHConstants::SRH_RECIPE_BUNDLE . '.' . SRHMyMenuIQConstants::SRH_RECIPE_SIDEDISHES_FIELD, [
    'enable_mapping' => 1,
    'plugin' => [
      'id' => 'srh_process_sidedishes'
    ],
  ]);
  $config->save();
}
function _ln_srh_menuiq_enable_process_menuiqscore(){
  /** @var \Drupal\Core\Config\Config $config */
  $config = \Drupal::configFactory()->getEditable(SRHFieldMapping::SETTINGS);
  $config->set(SRHConstants::SRH_RECIPE_BUNDLE . '.' . SRHMyMenuIQConstants::SRH_RECIPE_MENUIQSCORE_FIELD, [
    'enable_mapping' => 1,
    'plugin' => [
      'id' => 'srh_process_default',
      'settings' => [
        'srh_source_field' => 'myMenuIQScore'
      ]
    ],
  ]);
  $config->save();
}

function _ln_srh_menuiq_disable_process_sidedish(){
  /** @var \Drupal\Core\Config\Config $config */
  $config = \Drupal::configFactory()->getEditable(SRHFieldMapping::SETTINGS);
  $config->clear(SRHConstants::SRH_RECIPE_BUNDLE . '.' . SRHMyMenuIQConstants::SRH_RECIPE_SIDEDISHES_FIELD);
  $config->save();
}

function _ln_srh_menuiq_disable_process_menuiqscore(){
  /** @var \Drupal\Core\Config\Config $config */
  $config = \Drupal::configFactory()->getEditable(SRHFieldMapping::SETTINGS);
  $config->clear(SRHConstants::SRH_RECIPE_BUNDLE . '.' . SRHMyMenuIQConstants::SRH_RECIPE_MENUIQSCORE_FIELD);
  $config->save();
}

function _ln_srh_menuiq_enable_adimo_field() {
  $moduleHandler = \Drupal::service('module_handler');
  if (!$moduleHandler->moduleExists('ln_adimo')) {
    // Do nothing if ln_adimo module is not installed.
    return;
  }

  $form_display_storage = \Drupal::entityTypeManager()->getStorage('entity_form_display');
  /** @var EntityFormDisplay $form_display */
  $form_display = $form_display_storage->load('node.srh_recipe.default');
  $form_display->setComponent(SRHMyMenuIQConstants::SRH_RECIPE_ADIMO_FIELD, [
    'weight' => 104,
    'settings' => [],
    'type' => 'integrationWidget',
    'region' => 'content',
  ])->save();

  // Enable mapping for adimo field.
  /** @var \Drupal\Core\Config\Config $config */
  $config = \Drupal::configFactory()->getEditable(SRHFieldMapping::SETTINGS);
  $config->set(SRHConstants::SRH_RECIPE_BUNDLE . '.' . SRHMyMenuIQConstants::SRH_RECIPE_ADIMO_FIELD, [
    'enable_mapping' => 1,
    'plugin' => [
      'id' => 'srh_process_adimo',
      'settings' => [
        'srh_source_field' => 'adimoTouchpointId',
        'integration_type' => 5 // Enhanced Recipe Lightbox
      ]
    ],
  ]);
  $config->save();
}

function _ln_srh_menuiq_disable_adimo_field() {
  $moduleHandler = \Drupal::service('module_handler');
  if (!$moduleHandler->moduleExists('ln_adimo')) {
    // Do nothing if ln_adimo module is not installed.
    return;
  }

  $form_display_storage = \Drupal::entityTypeManager()->getStorage('entity_form_display');
  /** @var EntityFormDisplay $form_display */
  $form_display = $form_display_storage->load('node.srh_recipe.default');
  $form_display->removeComponent(SRHMyMenuIQConstants::SRH_RECIPE_ADIMO_FIELD)->save();

  // Remove field from mapping.
  /** @var \Drupal\Core\Config\Config $config */
  $config = \Drupal::configFactory()->getEditable(SRHFieldMapping::SETTINGS);
  $config->clear(SRHConstants::SRH_RECIPE_BUNDLE . '.' . SRHMyMenuIQConstants::SRH_RECIPE_ADIMO_FIELD);
  $config->save();
}

function _ln_srh_menuiq_enable_sidedishes_field(){
  $form_display_storage = \Drupal::entityTypeManager()->getStorage('entity_form_display');
  /** @var EntityFormDisplay $form_display */
  $form_display = $form_display_storage->load('node.srh_recipe.default');
  $form_display->setComponent(SRHMyMenuIQConstants::SRH_RECIPE_SIDEDISHES_FIELD, [
    'type' => 'paragraphs',
    'region' => 'content',
    'weight' => 27,
    'settings' => [
      'title' => 'SideDish',
      'title_plural' => 'SideDished',
      'edit_mode' => 'closed',
      'closed_mode' => 'summary',
      'autocollapse' => 'all',
      'closed_mode_threshold' => 0,
      'add_mode' => 'dropdown',
      'form_display_mode' => 'default',
      'default_paragraph_type' => 'srh_sidedish',
      'features' => [
        'add_above' => '0',
        'collapse_edit_all' => 'collapse_edit_all',
        'duplicate' => 'duplicate'
      ],
    ],
  ])->save();
}

function _ln_srh_menuiq_enable_menuiqscore_field(){
  $form_display_storage = \Drupal::entityTypeManager()->getStorage('entity_form_display');
  /** @var EntityFormDisplay $form_display */
  $form_display = $form_display_storage->load('node.srh_recipe.default');
  $form_display->setComponent(SRHMyMenuIQConstants::SRH_RECIPE_MENUIQSCORE_FIELD, [
    'type' => 'number',
    'region' => 'content',
    'weight' => 13,
    'settings' => [
      'placeholder' => '',
      'third_party_settings' => [],
    ],
  ])->save();
}

function _ln_srh_menuiq_disable_menuiqscore_field(){

  $form_display_storage = \Drupal::entityTypeManager()->getStorage('entity_form_display');
  /** @var EntityFormDisplay $form_display */
  $form_display = $form_display_storage->load('node.srh_recipe.default');
  $form_display->removeComponent(SRHMyMenuIQConstants::SRH_RECIPE_MENUIQSCORE_FIELD)->save();
}

function _ln_srh_menuiq_disable_sidedishes_field(){

  $form_display_storage = \Drupal::entityTypeManager()->getStorage('entity_form_display');
  /** @var EntityFormDisplay $form_display */
  $form_display = $form_display_storage->load('node.srh_recipe.default');
  $form_display->removeComponent(SRHMyMenuIQConstants::SRH_RECIPE_SIDEDISHES_FIELD)->save();
}

/**
 * Implements hook_update_N().
 */
function ln_srh_menuiq_update_8001(&$sandbox) {
  // Add default text to empty category text and summary texts
  /** @var \Drupal\Core\Config\Config $config */
  $config = \Drupal::service('config.factory')->getEditable(MyMenuIQSettings::SETTINGS);
  $module_path = drupal_get_path('module','ln_srh_menuiq');
  $yml = Yaml::parse(file_get_contents($module_path . '/config/install/ln_srh_menuiq.settings.yml'));
  $config->set('expanded.menu_sidedishes.empty_category_text',$yml['expanded']['menu_sidedishes']['empty_category_text']);
  $config->set('expanded.summary',$yml['expanded']['summary']);
  $config->save();

  // Add Title, duration and difficulty to sidedish display
  $yml = Yaml::parse(file_get_contents($module_path . '/config/optional/core.entity_view_display.paragraph.srh_sidedish.default.yml'));
  /** @var \Drupal\Core\Config\Config $config */
  $config = \Drupal::service('config.factory')->getEditable('core.entity_view_display.paragraph.srh_sidedish.default');
  $original_data = $config->getRawData();
  foreach (['_core', 'uuid'] as $key) {
    if (isset($original_data[$key])) {
      $yml[$key] = $original_data[$key];
    }
  }
  $config->setData($yml);
  $config->save();
}

/**
 * Create field_srh_id field on sidedish.
 */
function ln_srh_menuiq_update_8002(&$sandbox) {
  $module_path = drupal_get_path('module','ln_srh_menuiq');
  /** @var \Drupal\ln_srh\Services\ConfigReplace $configReplaceHelper */
  $configReplaceHelper = \Drupal::service('ln_srh.config_replacer');
  $configReplaceHelper->createFieldStorageConfigByYml($module_path . '/config/install/field.storage.paragraph.field_srh_id.yml');
  $configReplaceHelper->createFieldConfigByYml($module_path . '/config/install/field.field.paragraph.srh_sidedish.field_srh_id.yml');
  $configReplaceHelper->addFieldToEntityFormDisplayConfigByYml($module_path . '/config/optional/core.entity_form_display.paragraph.srh_sidedish.default.yml','field_srh_id','field.field.paragraph.srh_sidedish.field_srh_id');
}

/**
 * Add buy now text to ln_srh_menuiq.settings summary.
 */
function ln_srh_menuiq_update_8003(&$sandbox) {
  /** @var \Drupal\Core\Config\Config $config */
  $config = \Drupal::service('config.factory')->getEditable(MyMenuIQSettings::SETTINGS);
  $module_path = drupal_get_path('module', 'ln_srh_menuiq');
  $yml = Yaml::parse(file_get_contents($module_path . '/config/install/ln_srh_menuiq.settings.yml'));
  $config->set('expanded.summary.button_buy_text', $yml['expanded']['summary']['button_buy_text']);
  $config->save();
}

/**
 * Add balance_100 texts & button_open_text_info to ln_srh_menuiq.settings summary.
 */
function ln_srh_menuiq_update_8006(&$sandbox) {
  $moduleHandler = \Drupal::service('module_handler');
  $modulePath = $moduleHandler->getModule('ln_srh_menuiq')->getPath();
  /** @var \Drupal\Core\Config\Config $config */
  $config = \Drupal::service('config.factory')->getEditable(MyMenuIQSettings::SETTINGS);

  $yml = Yaml::parse(file_get_contents($modulePath . '/config/install/ln_srh_menuiq.settings.yml'));
  $config->set('expanded.summary.button_open_text_info', $yml['expanded']['summary']['button_open_text_info']);
  $config->set('balance_100.title', $yml['balance_100']['title']);
  $config->set('balance_100.subtitle', $yml['balance_100']['subtitle']);
  $config->save();
}

/**
 * Change paragraph srh_sidedish view display to one column layout.
 */
function ln_srh_menuiq_update_8007(&$sandbox) {
  $modulePath = \Drupal::service('module_handler')
    ->getModule('ln_srh_menuiq')
    ->getPath();

  // Add Title, duration and difficulty to sidedish display
  $yml = Yaml::parse(file_get_contents($modulePath . '/config/optional/core.entity_view_display.paragraph.srh_sidedish.default.yml'));
  /** @var \Drupal\Core\Config\Config $config */
  $config = \Drupal::service('config.factory')->getEditable('core.entity_view_display.paragraph.srh_sidedish.default');
  $original_data = $config->getRawData();
  foreach (['_core', 'uuid'] as $key) {
    if (isset($original_data[$key])) {
      $yml[$key] = $original_data[$key];
    }
  }
  $config->setData($yml);
  $config->save();
}
