<?php

use Drupal\ln_srh\Form\SRHFieldMapping;
use Drupal\paragraphs\Entity\Paragraph;
use Drupal\field\Entity\FieldStorageConfig;
use Drupal\field\Entity\FieldConfig;
use Drupal\ln_srh\SRHConstants;

/**
 * Implements hook_uninstall().
 */
function ln_srh_basic_install($is_syncing){
  $module_path = drupal_get_path('module','ln_srh_basic');
  /** @var \Drupal\ln_srh\Services\ConfigReplace $configReplaceHelper */
  $configReplaceHelper = \Drupal::service('ln_srh.config_replacer');
  $configReplaceHelper->addFieldToEntityFormDisplayConfigByYml($module_path . '/config/optional/core.entity_form_display.media.remote_video.default.yml','field_media_thumbnail_url','field.field.media.remote_video.field_media_thumbnail_url');
}

/**
 * Create Paragraph bundle srh_cloudfront_media
 */
function ln_srh_basic_update_8001(&$sandbox) {
  $module_path = drupal_get_path('module','ln_srh_basic');
  /** @var \Drupal\ln_srh\Services\ConfigReplace $configReplaceHelper */
  $configReplaceHelper = \Drupal::service('ln_srh.config_replacer');

  // Create Paragraph bundle srh_cloudfront_media
  $configReplaceHelper->createParagraphTypeConfigByYml($module_path . '/config/install/paragraphs.paragraphs_type.srh_cloudfront_media.yml');
  $configReplaceHelper->createFieldStorageConfigByYml($module_path . '/config/install/field.storage.paragraph.field_srh_cloudfront_description.yml');
  $configReplaceHelper->createFieldConfigByYml($module_path . '/config/install/field.field.paragraph.srh_cloudfront_media.field_srh_cloudfront_description.yml');
  $configReplaceHelper->createFieldStorageConfigByYml($module_path . '/config/install/field.storage.paragraph.field_srh_cloudfront_height.yml');
  $configReplaceHelper->createFieldConfigByYml($module_path . '/config/install/field.field.paragraph.srh_cloudfront_media.field_srh_cloudfront_height.yml');
  $configReplaceHelper->createFieldStorageConfigByYml($module_path . '/config/install/field.storage.paragraph.field_srh_cloudfront_mediaright.yml');
  $configReplaceHelper->createFieldConfigByYml($module_path . '/config/install/field.field.paragraph.srh_cloudfront_media.field_srh_cloudfront_mediaright.yml');
  $configReplaceHelper->createFieldStorageConfigByYml($module_path . '/config/install/field.storage.paragraph.field_srh_cloudfront_mime_type.yml');
  $configReplaceHelper->createFieldConfigByYml($module_path . '/config/install/field.field.paragraph.srh_cloudfront_media.field_srh_cloudfront_mime_type.yml');
  $configReplaceHelper->createFieldStorageConfigByYml($module_path . '/config/install/field.storage.paragraph.field_srh_cloudfront_thumbnail.yml');
  $configReplaceHelper->createFieldConfigByYml($module_path . '/config/install/field.field.paragraph.srh_cloudfront_media.field_srh_cloudfront_thumbnail.yml');
  $configReplaceHelper->createFieldStorageConfigByYml($module_path . '/config/install/field.storage.paragraph.field_srh_cloudfront_url.yml');
  $configReplaceHelper->createFieldConfigByYml($module_path . '/config/install/field.field.paragraph.srh_cloudfront_media.field_srh_cloudfront_url.yml');
  $configReplaceHelper->createFieldStorageConfigByYml($module_path . '/config/install/field.storage.paragraph.field_srh_cloudfront_width.yml');
  $configReplaceHelper->createFieldConfigByYml($module_path . '/config/install/field.field.paragraph.srh_cloudfront_media.field_srh_cloudfront_width.yml');
  $configReplaceHelper->createEntityFormDisplayByYml($module_path . '/config/install/core.entity_form_display.paragraph.srh_cloudfront_media.default.yml');
  $configReplaceHelper->createEntityViewDisplayByYml($module_path . '/config/install/core.entity_view_display.paragraph.srh_cloudfront_media.default.yml');

  // Create Field field_srh_cloudfront_medias on srh_recipe
  $configReplaceHelper->createFieldStorageConfigByYml($module_path . '/config/install/field.storage.node.field_srh_cloudfront_medias.yml');
  $configReplaceHelper->createFieldConfigByYml($module_path . '/config/install/field.field.node.srh_recipe.field_srh_cloudfront_medias.yml');

  // Add Field field_srh_cloudfront_medias to srh_recipe form display
  $configReplaceHelper->addFieldToEntityFormDisplayConfigByYml($module_path . '/config/rewrite/core.entity_form_display.node.srh_recipe.default.yml','field_srh_cloudfront_medias','field.field.node.srh_recipe.field_srh_cloudfront_medias');

  // Enable mapping CloudFront Medias
  /** @var \Drupal\Core\Config\Config $config */
  $config = \Drupal::service('config.factory')->getEditable(SRHFieldMapping::SETTINGS);
  $config->set(SRHConstants::SRH_RECIPE_BUNDLE . '.' . 'field_srh_cloudfront_medias', [
    'enable_mapping' => 1,
    'plugin' => [
      'id' => 'srh_process_cloudfront_medias'
    ],
  ]);
  $config->save();
}

/**
 * Create field_media_thumbnail_url field on remote video.
 */
function ln_srh_basic_update_8002(&$sandbox) {
  $module_path = drupal_get_path('module','ln_srh_basic');
  /** @var \Drupal\ln_srh\Services\ConfigReplace $configReplaceHelper */
  $configReplaceHelper = \Drupal::service('ln_srh.config_replacer');
  $configReplaceHelper->createFieldStorageConfigByYml($module_path . '/config/optional/field.storage.media.field_media_thumbnail_url.yml');
  $configReplaceHelper->createFieldConfigByYml($module_path . '/config/optional/field.field.media.remote_video.field_media_thumbnail_url.yml');
  $configReplaceHelper->addFieldToEntityFormDisplayConfigByYml($module_path . '/config/optional/core.entity_form_display.media.remote_video.default.yml','field_media_thumbnail_url','field.field.media.remote_video.field_media_thumbnail_url');
}

/**
 * Refactor field url cloudfront to text long.
 */
function ln_srh_basic_update_8003(&$sandbox) {
  if(!isset($sandbox['cloudfront_paragraphs'])){
    $cloudfront_paragraphs = \Drupal::entityTypeManager()->getStorage('paragraph')->loadByProperties(['type' => 'srh_cloudfront_media']);
    $sandbox['cloudfront_paragraphs'] = [];
    foreach ($cloudfront_paragraphs as $entity){
      $sandbox['cloudfront_paragraphs'][$entity->id()] = [
        'id' => $entity->id(),
        'field_srh_cloudfront_url' => $entity->get('field_srh_cloudfront_url')->getString(),
        'field_srh_cloudfront_thumbnail' => $entity->get('field_srh_cloudfront_thumbnail')->getString(),
      ];
    }
  }
  if (!isset($sandbox['total'])) {
    $module_path = drupal_get_path('module','ln_srh_basic');
    /** @var \Drupal\ln_srh\Services\ConfigReplace $configReplaceHelper */
    $configReplaceHelper = \Drupal::service('ln_srh.config_replacer');
    $fields = ['field_srh_cloudfront_url','field_srh_cloudfront_thumbnail'];
    foreach ($fields as $field_name){
      if($fieldStorage = FieldStorageConfig::loadByName('paragraph', $field_name)){
        $fieldStorage->delete();
      }
      if($fieldConfig = FieldConfig::loadByName('paragraph', 'srh_cloudfront_media', $field_name)){
        $fieldConfig->delete();
      }
      $configReplaceHelper->createFieldStorageConfigByYml($module_path . "/config/install/field.storage.paragraph.{$field_name}.yml");
      $configReplaceHelper->createFieldConfigByYml($module_path . "/config/install/field.field.paragraph.srh_cloudfront_media.{$field_name}.yml");
      $configReplaceHelper->addFieldToEntityFormDisplayConfigByYml($module_path . '/config/install/core.entity_form_display.paragraph.srh_cloudfront_media.default.yml',$field_name,"field.field.paragraph.srh_cloudfront_media.{$field_name}");
    }
    $sandbox['total'] = count($sandbox['cloudfront_paragraphs']);
    $sandbox['current'] = 0;
    if (empty($sandbox['total'])) {
      $sandbox['#finished'] = 1;
      return;
    }
  }
  if(empty($sandbox['cloudfront_paragraphs'])){
    $sandbox['#finished'] = 1;
    return;
  }
  $item = array_pop($sandbox['cloudfront_paragraphs']);
  $cloudfrontParagraph = Paragraph::load($item['id']);
  $cloudfrontParagraph->set('field_srh_cloudfront_url',$item['field_srh_cloudfront_url']);
  $cloudfrontParagraph->set('field_srh_cloudfront_thumbnail',$item['field_srh_cloudfront_thumbnail']);
  $cloudfrontParagraph->save();
  $sandbox['current']++;
  if ($sandbox['current'] >= $sandbox['total']) {
    $sandbox['#finished'] = 1;
  }
  else {
    $sandbox['#finished'] = ($sandbox['current'] / $sandbox['total']);
  }
}

/**
 * Change update quantity field on ingredients
 */
function ln_srh_basic_update_8004(&$sandbox) {
  $module_path = drupal_get_path('module', 'ln_srh_basic');

  /** @var \Drupal\ln_srh\Services\ConfigReplace $configReplaceHelper */
  $configReplaceHelper = \Drupal::service('ln_srh.config_replacer');

  if ($fieldConfig = FieldConfig::loadByName('paragraph', 'srh_ingredient', 'field_srh_quantity')) {
    $fieldConfig->delete();
  }
  if ($fieldStorage = FieldStorageConfig::loadByName('paragraph', 'field_srh_quantity')) {
    $fieldStorage->delete();
  }
  $configReplaceHelper->createFieldStorageConfigByYml($module_path . '/config/install/field.storage.paragraph.field_srh_quantity.yml');
  $configReplaceHelper->createFieldConfigByYml($module_path . '/config/install/field.field.paragraph.srh_ingredient.field_srh_quantity.yml');
  $configReplaceHelper->addFieldToEntityFormDisplayConfigByYml($module_path . '/config/optional/core.entity_form_display.paragraph.srh_ingredient.default.yml', 'field_srh_quantity', 'field.field.paragraph.srh_ingredient.field_srh_quantity');
}
