<?php

/**
 * @file
 * Install, update and uninstall functions for the ln_c_entity_compare module.
 */

/**
 * Implements hook_requirements().
 */
function ln_c_entity_compare_requirements($phase) {
  $requirements = [];
  if ($phase == 'install') {
    $field_manager = \Drupal::service('entity_field.manager');
    $field_definition = $field_manager->getFieldStorageDefinitions('paragraph')['field_c_settings'];
    if (empty($field_definition)) {
      $requirements['ln_c_entity_compare'] = [
        'title' => t('Module Lightnest components: Core'),
        'value' => t('Not up to date'),
        'description' => t('The ln_c_entity_compare module requires module dsu_c_core version higher than 1.7. Make sure you run the update.php script after updating the module (or drush updb).'),
        'severity' => REQUIREMENT_ERROR,
      ];
    }
  }
  return $requirements;
}

/**
 * Implements hook_install().
 */
function ln_c_entity_compare_install($is_syncing) {

  if ($is_syncing) {
    // If this module is being installed as part of a configuration import,
    // chances are the settings for the module have already been setup, so,
    // we don't tamper the configuration object
    return;
  }

  $config_factory = \Drupal::configFactory();
  $config = $config_factory->getEditable('ln_c_entity_compare.settings');
  
  // Desired default settings
  $default_settings = [
    'node' => [
      'view_mode' => 'ln_entity_compare',
      'bundles' => [
        'dsu_product',
        'srh_recipe',
      ],
    ],
  ];
  
  // Process $default_settings, remove entity types and bundles that don't exist
  foreach ($default_settings as $entity_type => &$entity_settings) {
  
    try {
      // This will throw an exception if the entity type doesn't exist
      \Drupal::entityTypeManager()->getDefinition($entity_type);
  
    } catch (\Drupal\Component\Plugin\Exception\PluginNotFoundException $exception) {
      // Remove from settings and move on to the next entity type
      unset($default_settings[$entity_type]);
      continue;
    }
  
    // If we made it thus far, our entity type exists, check bundles
    $bundle_info = \Drupal::service('entity_type.bundle.info')->getBundleInfo($entity_type);
    foreach ($entity_settings['bundles'] as $delta => $entity_bundle) {
      if (!isset($bundle_info[$entity_bundle])) {
        unset($entity_settings['bundles'][$delta]);
      }
    }
    if (empty($entity_settings['bundles'])) {
      // No bundles remain for this entity type, remove as well
      unset($default_settings[$entity_type]);
    }
  }
  
  if (!empty($default_settings)) {
    $config->set('entity_bundles_per_type', $default_settings);
    $config->save(TRUE);
  }
}