<?php
use Drupal\Core\Url;
use Drupal\Core\StringTranslation\TranslatableMarkup;
use Platformsh\ConfigReader\Config;
use Drupal\Core\Form\ConfigFormBase;
use Drupal\Core\Form\FormStateInterface;
use Symfony\Component\DependencyInjection\ContainerInterface;


function nescafe_preprocess_links__language_block(&$lang){
    $lang['current_lang'] =  \Drupal::languageManager()->getCurrentLanguage()->getId();

}
function nescafe_preprocess_webform__promo_code(&$form){
if(isset($_POST['introduceti_codeul_promotional'])){
     $curr_id_for_user = \Drupal::currentUser()->id();
         $config = new Config();
         $credentials = $config->credentials('database');
         $dsn = sprintf('mysql:host=%s;port=%d;dbname=%s', $credentials['host'], $credentials['port'], $credentials['path']);
         $conn = new \PDO($dsn, $credentials['username'], $credentials['password'], [
             \PDO::ATTR_ERRMODE => \PDO::ERRMODE_EXCEPTION,
             \PDO::MYSQL_ATTR_USE_BUFFERED_QUERY => TRUE,
             \PDO::MYSQL_ATTR_FOUND_ROWS => TRUE,
         ]);

 $sql = "SELECT * FROM promo_code WHERE active = 0";
        $result = $conn->query($sql);
        $result->setFetchMode(\PDO::FETCH_OBJ);

        if ($result) {
        foreach ($result as $record) {
            if($record->active == 0){
                     $sql = "UPDATE promo_code SET active = '".$curr_id_for_user."' WHERE promocode = '".$_POST['introduceti_codul_promotional']."' AND active = 0  ";
            }
        }
             if($conn->query($sql)){
              //echo "ok";
             }
        }
}
}

function nescafe_preprocess_menu__header_btn(&$logged){

      $current_user = \Drupal::currentUser();
        if ($current_user->isAnonymous()) {
          // Анонимный юзер...
            print '<div class="cookie_success" style="opacity: 0;height: 0;">ok</div>';
           $logged['items']['menu_link_content:782f8d36-a980-4feb-95ab-0c3a0da00875']['title'] = t('Зарегистрируйся и выиграй');
        }

        if ($current_user->isAuthenticated()) {
          // Авторизованный юзер...
            $routeName = new TranslatableMarkup('view.account.page_1');
            $logged['items']['menu_link_content:782f8d36-a980-4feb-95ab-0c3a0da00875']['title'] = t('Личный кабинет');
            $logged['items']['menu_link_content:782f8d36-a980-4feb-95ab-0c3a0da00875']['url'] = Url::fromRoute($routeName->getUntranslatedString());


        }
}

/*$current_path = \Drupal::service('path.current')->getPath();*/


function nescafe_preprocess_page(&$page){
    //dump($page);
}


function nescafe_preprocess_block__webform_5(&$elem){

    $curr_id_for_user = \Drupal::currentUser()->id();
    $current_user = \Drupal::currentUser();
    $config = new Config();

    $credentials = $config->credentials('database');

        $dsn = sprintf('mysql:host=%s;port=%d;dbname=%s', $credentials['host'], $credentials['port'], $credentials['path']);
        $conn = new \PDO($dsn, $credentials['username'], $credentials['password'], [
            \PDO::ATTR_ERRMODE => \PDO::ERRMODE_EXCEPTION,
            \PDO::MYSQL_ATTR_USE_BUFFERED_QUERY => TRUE,
            \PDO::MYSQL_ATTR_FOUND_ROWS => TRUE,
        ]);


        $sql = "SELECT * FROM webform_submission WHERE uid = '".$curr_id_for_user."' AND webform_id = 'cookie'  ";
        $result = $conn->query($sql);
        $result->setFetchMode(\PDO::FETCH_OBJ);

        if ($result) {
            foreach ($result as $record) {
            }
            if($record){
             if ($current_user->isAuthenticated()) {
                        print '<div class="cookie_success" style="opacity: 0;height: 0;">ok</div>';
                    }
            }
        }
}

function nescafe_preprocess_region__account(&$elem){
$curr_id_for_user = \Drupal::currentUser()->id();

// Create a new config object to ease reading the Platform.sh environment variables.
// You can alternatively use getenv() yourself.
$config = new Config();

// The 'database' relationship is generally the name of primary SQL database of an application.
// That's not required, but much of our default automation code assumes it.
$credentials = $config->credentials('database');

    // Connect to the database using PDO.  If using some other abstraction layer you would
    // inject the values from $database into whatever your abstraction layer asks for.
    $dsn = sprintf('mysql:host=%s;port=%d;dbname=%s', $credentials['host'], $credentials['port'], $credentials['path']);
    $conn = new \PDO($dsn, $credentials['username'], $credentials['password'], [
        // Always use Exception error mode with PDO, as it's more reliable.
        \PDO::ATTR_ERRMODE => \PDO::ERRMODE_EXCEPTION,
        // So we don't have to mess around with cursors and unbuffered queries by default.
        \PDO::MYSQL_ATTR_USE_BUFFERED_QUERY => TRUE,
        // Make sure MySQL returns all matched rows on update queries including
        // rows that actually didn't have to be updated because the values didn't
        // change. This matches common behavior among other database systems.
        \PDO::MYSQL_ATTR_FOUND_ROWS => TRUE,
    ]);

    $roles = \Drupal::currentUser()->getRoles();
//dump($roles);
        if(in_array('administrator', $roles)) {
            $sqlQuery = "SELECT * FROM promo_code WHERE active <> 0";
        }
        if(in_array('authenticated', $roles) && !in_array('administrator', $roles)){
          $sqlQuery = "SELECT * FROM promo_code WHERE active = '".$curr_id_for_user."'";
        }
        if(in_array('authenticated', $roles) && in_array('manager_filiala', $roles) && !in_array('administrator', $roles)){
          $sqlQuery = "SELECT * FROM users_field_data";
        }




    // Show table.
    $sql = $sqlQuery;
    $result = $conn->query($sql);
    $result->setFetchMode(\PDO::FETCH_OBJ);
    $sql2 = "SELECT * FROM promo_code WHERE active <> 0";
    $result2 = $conn->query($sql2);
    $result2->setFetchMode(\PDO::FETCH_OBJ);

    //dump($conn->query($sql));
    if ($result) {
if(\Drupal::languageManager()->getCurrentLanguage()->getId() == 'ru'){
    $promo = 'Промо код';
    $number = 'Количество очков';
    $totalPromo = 'Всего очков';
}
if(\Drupal::languageManager()->getCurrentLanguage()->getId() == 'ro'){
    $promo = 'Codul Promotional';
    $number = 'Numarul de puncte';
    $totalPromo = 'Puncte acumulate';
}
 if(in_array('authenticated', $roles) && !in_array('manager_filiala', $roles)){
        print <<<TABLE
<table id="table8">
<thead>
<tr><th>ID</th><th>$promo</th><th>$number</th></tr>
</thead>
<tbody>
TABLE;
$count = 1;
$score = 0;
$total = 0;
$promoTotal = 0;
foreach($result2 as $record2){
    if(!preg_match("/^([0-9])+$/", $record2->promocode)){
        $promoTotal += 1;
    }else{
        $promoTotal += 1;
    }
}
        foreach ($result as $record) {


            if ($result) {
                if(!preg_match("/^([0-9])+$/", $record->promocode)){
                    $score = 2;
                    $total += 2;
                }else{
                    $score = 1;
                    $total += 1;
                }
                    printf("<tr><td>%s</td><td>%s</td><td>%s</td></tr>\n", $count, $record->promocode, $score);

                        $count++;
            }

        }
        print "</tbody>\n</table>\n";
}

 if(in_array('authenticated', $roles) && in_array('manager_filiala', $roles) && !in_array('administrator', $roles)){
     foreach($result as $record){
        $getPhone = "SELkECT * FROM user__field_phone";
        foreach($getPhone as $phoneVal){
        }
            dump($getPhone);
            dump($phoneVal);
            dump('123');

     if(\Drupal::languageManager()->getCurrentLanguage()->getId() == 'ru'){
         $name = 'Имя';
         $phone = 'Телефон';
         $mail = 'Почта';
     }
     if(\Drupal::languageManager()->getCurrentLanguage()->getId() == 'ro'){
         $name = 'Nume';
         $phone = "Telefon";
         $mail = 'Posta';
     }

             print <<<TABLE
     <table id="table8">
     <thead>
     <tr><th>ID</th><th>$name</th><th>$mail</th><th>$phone</th></tr>
     </thead>
     <tbody>
     TABLE;
     $count = 1;
             foreach ($result as $record) {


                 if ($result) {

                         printf("<tr><td>%s</td><td>%s</td><td>%s</td><td>%s</td></tr>\n", $count, $record->name, $record->mail, $phone->field_phone_value);

                             $count++;
                 }

             }
             print "</tbody>\n</table>\n";
             }
 }
        print "$totalPromo => $total";
            $getUserID = "SELECT * FROM webform_submission_data WHERE webform_id = 'promo_code' AND name = 'user_id'";
            $res = $conn->query($getUserID);
            $res->setFetchMode(\PDO::FETCH_OBJ);
            foreach($res as $userID){
            }
            if($curr_id_for_user == $userID->value){
                if(($promoTotal % 7) == 0){
                    echo "У тебя награда 3 степени";
                }
            }
            if($total >= 10 && $total < 15){
               echo "У тебя награда 2 степени";
            }
            if($total >= 15 && $total < 30){
                echo "Ты учавствуешь в игре дня";
            }
            if($total > 30){
                echo "Ты учавствуешь в финальную игру";
            }

    }



}


use Symfony\Component\HttpFoundation\Request;

/**
 * Обработчик запроса.
 */
function nescafe_preprocess_request(Request $request) {
  // Получение данных из строки запроса.
  $queryData = $request->query->all();

  // Обработка данных и выполнение необходимых действий.
  $codPromotional = $queryData['introduceti_codul_promotional'];
  $userId = $queryData['user_id'];

  // Далее можно выполнить нужную логику на основе полученных данных.
  // Например, сохранить их в базе данных или выполнить другие операции.

  // Пример вывода данных для проверки.
  drupal_set_message('Код промоции: ' . $codPromotional);
  drupal_set_message('User ID: ' . $userId);
}
